# CentOS 6.x kickstart file - ks6.cfg
#
# For more information on kickstart syntax and commands, refer to the
# CentOS Installation Guide:
# https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Installation_Guide/s1-kickstart2-options.html
#
# For testing, you can fire up a local http server temporarily.
# cd to the directory where this ks.cfg file resides and run the following:
#    $ python -m SimpleHTTPServer
# You don't have to restart the server every time you make changes.  Python
# will reload the file from disk every time.  As long as you save your changes
# they will be reflected in the next HTTP download.  Then to test with
# a PXE boot server, enter the following on the PXE boot prompt:
#    > linux text ks=http://<your_ip>:8000/ks.cfg

# Required settings
lang en_US.UTF-8
keyboard us
rootpw --iscrypted $6$CpLoIEBkN$rn0q609j/8j3SkAmUzNMLe/B79v9pIn3tHQbLg2tExs1qsTaL/d/ENBbmlx71bdoatUNyS9otnQ.bjMOCMFLF0
authconfig --enableshadow --passalgo=sha512
timezone UTC

# Optional settings
install
cdrom
unsupported_hardware
network --device eth0 --bootproto=dhcp
firewall --disabled
selinux --permissive
bootloader --location=mbr
text
skipx
zerombr
clearpart --all --initlabel
part / --size 100 --fstype ext4 --grow
firstboot --disabled
reboot

%packages --nobase --ignoremissing --excludedocs
openssh-clients
# Prerequisites for installing VMware Tools or VirtualBox guest additions.
# Put in kickstart to ensure first version installed is from install disk,
# not latest from a mirror.
kernel-headers
kernel-devel
gcc
make
perl
curl
wget
# Other stuff
sudo
nfs-utils
-fprintd-pam
-intltool
# Selinux
#policycoreutils
#selinux-policy
#selinux-policy-targeted
#libselinux
#libselinux-utils
#libselinux-python
# Workaround for selinux
-system-config-firewall-tui
system-config-firewall-base

# Microcode updates cannot work in a VM
-microcode_ctl
# unnecessary firmware
-aic94xx-firmware
-atmel-firmware
-b43-openfwwf
-bfa-firmware
-ipw*-firmware
-irqbalance
-ivtv-firmware
-iwl*-firmware
-libertas-usb8388-firmware
-ql*-firmware
-rt61pci-firmware
-rt73usb-firmware
-xorg-x11-drv-ati-firmware
-zd1211-firmware
-NetworkManager
-NetworkManager-team
-NetworkManager-tui
-NetworkManager-libnm
-NetworkManager-config-server

%end

%post
# configure vagrant user in sudoers
/usr/sbin/groupadd cloud-user
mkdir -p /home/cloud-user
/usr/sbin/useradd cloud-user -m -d /home/cloud-user -g cloud-user -G wheel -s /bin/bash
echo cloud-user:'$6$veX3nQ/z$kmVWzcvmtzIlkPZsWhfdMAC0IdaJ.knKk/VtDEhggh/h0KWFVioQ.iGAu7y8GlhO/y5YZcQPvfUp7KNxk3dZY1'|chpasswd --encrypted
chown -R cloud-user:cloud-user /home/cloud-user
usermod -m -d /home/cloud-user/ -s /bin/bash cloud-user 

echo "cloud-user ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
#chmod 0440 /etc/sudoers.d/cloud-user
cp /etc/sudoers /etc/sudoers.orig
sed -i "s/^.*requiretty/#Defaults requiretty/" /etc/sudoers
sed -i 's/^#\s*\(%wheel\s*ALL=(ALL)\s*NOPASSWD:\s*ALL\)/\1/' /etc/sudoers
# keep proxy settings through sudo
echo 'Defaults env_keep += "HTTP_PROXY HTTPS_PROXY FTP_PROXY RSYNC_PROXY NO_PROXY"' >> /etc/sudoers
%end